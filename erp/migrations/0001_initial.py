# Generated by Django 3.0.4 on 2020-11-09 10:20

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AccountEmailaddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(max_length=254, unique=True)),
                ('verified', models.IntegerField()),
                ('primary', models.IntegerField()),
            ],
            options={
                'db_table': 'account_emailaddress',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountEmailconfirmation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField()),
                ('sent', models.DateTimeField(blank=True, null=True)),
                ('key', models.CharField(max_length=64, unique=True)),
            ],
            options={
                'db_table': 'account_emailconfirmation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthtokenToken',
            fields=[
                ('key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('created', models.DateTimeField()),
            ],
            options={
                'db_table': 'authtoken_token',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ChaegongComcode',
            fields=[
                ('code_id', models.CharField(max_length=9, primary_key=True, serialize=False)),
                ('code_name', models.CharField(max_length=50)),
                ('code_topidx', models.CharField(blank=True, max_length=2, null=True)),
                ('code_topcd', models.CharField(blank=True, max_length=9, null=True)),
                ('code_use', models.IntegerField()),
            ],
            options={
                'db_table': 'chaegong_comcode',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ChaegongComidx',
            fields=[
                ('idx_id', models.CharField(max_length=2, primary_key=True, serialize=False)),
                ('idx_name', models.CharField(max_length=50)),
                ('idx_use', models.IntegerField()),
            ],
            options={
                'db_table': 'chaegong_comidx',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Crmcompanybaseinfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('companycode', models.CharField(blank=True, max_length=20, null=True, unique=True, verbose_name='기업코드')),
                ('custid', models.CharField(blank=True, max_length=12, null=True, verbose_name='사업자번호')),
                ('subject', models.CharField(blank=True, max_length=10, null=True, verbose_name='종목')),
                ('main_category', models.CharField(blank=True, max_length=2, null=True, verbose_name='업종대분류')),
                ('mid_category', models.CharField(blank=True, max_length=3, null=True, verbose_name='업종중분류')),
                ('detail1_category', models.CharField(blank=True, max_length=4, null=True, verbose_name='세분류1')),
                ('detail2_category', models.CharField(blank=True, max_length=5, null=True, verbose_name='세분류2')),
                ('com_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='회사명')),
                ('stock_code', models.CharField(blank=True, max_length=6, null=True, verbose_name='거래소코드')),
                ('finance_year', models.CharField(blank=True, max_length=6, null=True, verbose_name='회계년도')),
                ('group_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='그룹사명')),
                ('telno', models.CharField(blank=True, max_length=20, null=True, verbose_name='전화번호')),
                ('faxno', models.CharField(blank=True, max_length=20, null=True, verbose_name='팩스번호')),
                ('zipno', models.CharField(blank=True, max_length=6, null=True, verbose_name='우편번호')),
                ('addr', models.CharField(blank=True, max_length=300, null=True, verbose_name='주소1')),
                ('addr_detail', models.CharField(blank=True, max_length=500, null=True, verbose_name='상세주소')),
                ('found_date', models.CharField(blank=True, max_length=8, null=True, verbose_name='설립일')),
                ('website', models.CharField(blank=True, max_length=100, null=True, verbose_name='홈페이지')),
                ('corporation_num', models.CharField(blank=True, max_length=30, null=True, verbose_name='법인등록번호')),
                ('remark', models.CharField(blank=True, max_length=4000, null=True, verbose_name='리마크')),
                ('com_type', models.CharField(blank=True, max_length=20, null=True, verbose_name='업체타입')),
                ('entryid', models.CharField(blank=True, max_length=20, null=True, verbose_name='입력아이디')),
                ('modid', models.CharField(blank=True, max_length=20, null=True, verbose_name='수정자')),
                ('use_yn', models.CharField(blank=True, max_length=1, null=True, verbose_name='사용구분')),
                ('emp_count', models.CharField(blank=True, max_length=10, null=True, verbose_name='사원수')),
                ('gross_total', models.IntegerField(blank=True, null=True, verbose_name='매출액')),
                ('partner_cnt', models.CharField(blank=True, max_length=10, null=True, verbose_name='파트너사 수')),
                ('partner_emp_cnt', models.CharField(blank=True, max_length=10, null=True, verbose_name='파트너사 사원수')),
                ('confirm_yn', models.CharField(blank=True, max_length=1, null=True, verbose_name='컨펌여부')),
                ('typecode', models.CharField(blank=True, max_length=10, null=True, verbose_name='타입코드')),
                ('title_code', models.CharField(blank=True, max_length=1, null=True, verbose_name='메인대분류')),
                ('hold_yn', models.CharField(blank=True, max_length=1, null=True, verbose_name='홀드여부')),
                ('hold_id', models.CharField(blank=True, max_length=20, null=True, verbose_name='홀드유저')),
                ('group_cd', models.CharField(blank=True, max_length=10, null=True, verbose_name='그룹사코드')),
                ('company_stat', models.CharField(blank=True, max_length=9, null=True, verbose_name='업체상태')),
                ('nation_code', models.CharField(blank=True, max_length=9, null=True, verbose_name='국가코드')),
                ('second_comname', models.CharField(blank=True, max_length=100, null=True, verbose_name='보조상호')),
            ],
            options={
                'verbose_name_plural': '회사기본정보 / Crmcompanybaseinfo',
                'db_table': 'crm_crmcompanybaseinfo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain', models.CharField(max_length=100, unique=True)),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'django_site',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('email', models.CharField(max_length=255, unique=True)),
                ('nickname', models.CharField(max_length=25)),
                ('is_active', models.IntegerField()),
                ('is_admin', models.IntegerField()),
                ('phonenumber', models.CharField(max_length=25)),
                ('team', models.CharField(max_length=25)),
            ],
            options={
                'verbose_name_plural': '내부직원 / Employee',
                'db_table': 'employee_employee',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SocialaccountSocialaccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider', models.CharField(max_length=30)),
                ('uid', models.CharField(max_length=191)),
                ('last_login', models.DateTimeField()),
                ('date_joined', models.DateTimeField()),
                ('extra_data', models.TextField()),
            ],
            options={
                'db_table': 'socialaccount_socialaccount',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SocialaccountSocialapp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider', models.CharField(max_length=30)),
                ('name', models.CharField(max_length=40)),
                ('client_id', models.CharField(max_length=191)),
                ('secret', models.CharField(max_length=191)),
                ('key', models.CharField(max_length=191)),
            ],
            options={
                'db_table': 'socialaccount_socialapp',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SocialaccountSocialappSites',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'socialaccount_socialapp_sites',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SocialaccountSocialtoken',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.TextField()),
                ('token_secret', models.TextField()),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'socialaccount_socialtoken',
                'managed': False,
            },
        ),
    ]
