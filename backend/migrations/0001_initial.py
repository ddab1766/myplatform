# Generated by Django 3.0.4 on 2021-02-01 16:56

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email')),
                ('is_active', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_temp', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name_plural': '사용자 / User',
            },
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer_comment', models.CharField(blank=True, max_length=1000, null=True, verbose_name='답변')),
                ('answer_use_yn', models.BooleanField(default=True, verbose_name='사용유무')),
                ('answer_placeholder', models.CharField(blank=True, max_length=1000, null=True, verbose_name='placeholder')),
            ],
            options={
                'verbose_name_plural': '직종별답변 / Answer',
            },
        ),
        migrations.CreateModel(
            name='ComCode',
            fields=[
                ('code_id', models.CharField(max_length=9, primary_key=True, serialize=False)),
                ('code_name', models.CharField(max_length=50)),
                ('code_topidx', models.CharField(blank=True, max_length=2, null=True)),
                ('code_topcd', models.CharField(blank=True, max_length=9, null=True)),
                ('code_use', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name_plural': '상세코드 / ComCode',
            },
        ),
        migrations.CreateModel(
            name='ComIdx',
            fields=[
                ('idx_id', models.CharField(max_length=2, primary_key=True, serialize=False)),
                ('idx_name', models.CharField(max_length=50)),
                ('idx_use', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name_plural': '공통코드 INDEX / ComIdx',
            },
        ),
        migrations.CreateModel(
            name='ComPaCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('zikcode1', models.CharField(blank=True, max_length=5, null=True, verbose_name='직종코드1')),
                ('zikname1', models.CharField(blank=True, max_length=200, null=True, verbose_name='직종이름1')),
                ('zikcode2', models.CharField(blank=True, max_length=5, null=True, verbose_name='직종이름1')),
                ('zikname2', models.CharField(blank=True, max_length=200, null=True, verbose_name='직종이름1')),
                ('zikcode3', models.CharField(blank=True, max_length=5, null=True, verbose_name='직종이름1')),
                ('zikname3', models.CharField(blank=True, max_length=200, null=True, verbose_name='직종이름1')),
                ('paname1', models.CharField(blank=True, max_length=50, null=True, verbose_name='파견명')),
            ],
            options={
                'verbose_name_plural': '법정파견직종코드 / ComPaCode',
            },
        ),
        migrations.CreateModel(
            name='CompanyBaseInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('custid', models.CharField(blank=True, max_length=13, null=True, verbose_name='사업자번호')),
                ('subject', models.CharField(blank=True, max_length=10, null=True, verbose_name='종목')),
                ('main_category', models.CharField(blank=True, max_length=2, null=True, verbose_name='업종대분류')),
                ('mid_category', models.CharField(blank=True, max_length=3, null=True, verbose_name='업종중분류')),
                ('detail1_category', models.CharField(blank=True, max_length=4, null=True, verbose_name='세분류1')),
                ('detail2_category', models.CharField(blank=True, max_length=5, null=True, verbose_name='세분류2')),
                ('com_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='회사명')),
                ('stock_code', models.CharField(blank=True, max_length=6, null=True, verbose_name='거래소코드')),
                ('finance_year', models.CharField(blank=True, max_length=6, null=True, verbose_name='회계년도')),
                ('group_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='그룹사명')),
                ('com_telno', models.CharField(blank=True, max_length=20, null=True, verbose_name='전화번호')),
                ('com_addr', models.CharField(blank=True, max_length=300, null=True, verbose_name='주소')),
                ('found_date', models.CharField(blank=True, max_length=8, null=True, verbose_name='설립일')),
                ('website', models.CharField(blank=True, max_length=50, null=True, verbose_name='홈페이지')),
                ('emp_count', models.CharField(blank=True, max_length=10, null=True, verbose_name='사원수')),
                ('gross_total', models.IntegerField(blank=True, null=True, verbose_name='매출액')),
            ],
            options={
                'verbose_name_plural': '기업기본정보 / CompanyBaseInfo',
            },
        ),
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('modified_time', models.DateTimeField(auto_now=True)),
                ('faq_title', models.CharField(max_length=100, verbose_name='제목')),
                ('faq_text', models.TextField(max_length=1000, verbose_name='설명')),
            ],
            options={
                'verbose_name_plural': 'FAQ',
            },
        ),
        migrations.CreateModel(
            name='JikjongLow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name_plural': '직종(소) / JikJongLow',
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('modified_time', models.DateTimeField(auto_now=True)),
                ('noti_event', models.CharField(blank=True, max_length=1000, null=True, verbose_name='이벤트 내용 및 작업 내용')),
            ],
            options={
                'verbose_name_plural': '공지사항 / Notification',
            },
        ),
        migrations.CreateModel(
            name='Qna',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('modified_time', models.DateTimeField(auto_now=True)),
                ('qna_email', models.EmailField(max_length=254, verbose_name='이메일주소')),
                ('qna_phone', models.CharField(blank=True, max_length=30, null=True, verbose_name='연락처')),
                ('qna_title', models.CharField(max_length=100, verbose_name='제목')),
                ('qna_text', models.TextField(max_length=500, verbose_name='설명')),
                ('qna_attach', models.FileField(null=True, upload_to='uploads//qna/', verbose_name='첨부파일')),
            ],
            options={
                'verbose_name_plural': '문의사항 / Qna',
            },
        ),
        migrations.CreateModel(
            name='Jikjong',
            fields=[
                ('jikjong_mid', models.OneToOneField(limit_choices_to=models.Q(('comidx', 'AA'), ('code_topcd__endswith', '00000')), on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='backend.ComCode', verbose_name='직종(중)')),
                ('jikjong_comment', models.TextField(blank=True, max_length=500, null=True, verbose_name='직종(중) 설명')),
            ],
            options={
                'verbose_name_plural': '직종(중) / Jikjong',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_comment', models.CharField(blank=True, max_length=100, null=True, verbose_name='질문')),
                ('question_use_yn', models.BooleanField(default=True, verbose_name='사용유무')),
                ('jikjong_low', models.ForeignKey(blank=True, limit_choices_to=models.Q(('comidx', 'AA'), models.Q(_negated=True, code_topcd__endswith='00000'), models.Q(_negated=True, code_topcd=None)), null=True, on_delete=django.db.models.deletion.CASCADE, to='backend.ComCode', verbose_name='직종(소)')),
                ('jikjong_mid', models.ForeignKey(limit_choices_to=models.Q(('comidx', 'AA'), ('code_topcd__endswith', '00000')), null=True, on_delete=django.db.models.deletion.CASCADE, related_name='question_jikjong_mid', to='backend.ComCode', verbose_name='직종(중)')),
                ('question_gubun', models.ForeignKey(limit_choices_to={'comidx': 'CD'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='question_gubun', to='backend.ComCode', verbose_name='질문구분')),
            ],
            options={
                'verbose_name_plural': '직종별질문 / Question',
            },
        ),
        migrations.CreateModel(
            name='Point',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('point', models.IntegerField(null=True, verbose_name='별점')),
                ('point_gubun', models.ForeignKey(blank=True, limit_choices_to={'code_topcd': None, 'comidx': 'ZD'}, null=True, on_delete=django.db.models.deletion.CASCADE, to='backend.ComCode', verbose_name='별점 항목')),
            ],
            options={
                'verbose_name_plural': '별점 / Point',
            },
        ),
    ]
